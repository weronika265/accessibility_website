{% extends 'base.html.twig' %}
{# skonfigurowane include, zeby nie zchodzic ponizej templates? #}
{# zrobic normalne style #}
{# poprawic sidebar, zeby byl accessible #}
{# cos nie dziala grafika a11y #}
{% block title %}
    Wytyczna 1.3 Możliwość adaptacji
{% endblock %}

{% block body %}
    {% include 'header.html.twig' %}
    {% include 'sidebar.html.twig' %}
    <main id="main" class="page reposition content-cut">
        <article>
            <h1>Wytyczna 1.3 Możliwość adaptacji</h1>
            <section>
                <p>
                    Twórz treści, które mogą być prezentowane na różne sposoby, bez utraty informacji czy struktury.
                </p>
                <div id="table-of-content">
                    <h2>Spis treści</h2>
                    <ul>
                        <li><a href="#1_3_1">Kryterium sukcesu 1.3.1 Informacje i relacje – Poziom A</a></li>
                        <li><a href="#1_3_2">Kryterium sukcesu 1.3.2 Zrozumiała kolejność – Poziom A</a></li>
                        <li><a href="#1_3_3">Kryterium sukcesu 1.3.3 Właściwości zmysłowe – Poziom A</a></li>
                        <li><a href="#1_3_4">Kryterium sukcesu 1.3.4 Orientacja – Poziom AA</a></li>
                        <li><a href="#1_3_5">Kryterium sukcesu 1.3.5 Określenie pożądanej wartości – Poziom AA</a></li>
                        <li><a href="#1_3_6">Kryterium sukcesu 1.3.6 Określenie przeznaczenia – Poziom AAA</a></li>
                    </ul>
                </div>
            </section>
            <section>
                <h3 id="1_3_1">Kryterium sukcesu 1.3.1 Informacje i relacje – Poziom A</h3>
                <p>
                    Struktura strony, jej zawartość i relacje pomiędzy elementami mają być przedstawione w formie tekstowej lub są
                    <strong>określone programowo</strong>. Oznacza to, że mają być odczytywane oraz wyświetlane przez programy użytkownika, w tym przeglądarki i technologie asystujące. Zazwyczaj treści określone programowo są lepsze od tekstu.
                </p>
                <p>
                    Ten sposób prezentacji pozwala zrozumieć treść zarówno w przypadku, kiedy ktoś widzi stronę, jak i jej nie widzi (osoby niewidome).<br/>
                    Przykładowo, część użytkowników ważne informacje będzie szukać po kolorze czerwonym.
                    Inni będą kierowali się oznaczeniem „*” lub podkreśleniem słów.
                </p>
                <p>
                    Część osób będzie oglądać stronę, a inni będą rozumieli ją przez układ list, nagłówków, akapitów.
                </p>
{#                <p>#}
{#                    Jak stronę będzie widział czytnik:#}
{#                </p>#}
{#                <div style="border: 2px solid red;">#}
{#                    <h1>Główny nagłówek</h1>#}
{#                    <h2>Mniej ważny nagłówek</h2>#}
{#                    <p>Akapit</p>#}
{#                    <h2>Mniej ważny nagłówek</h2>#}
{#                    <p>Akapit</p>#}
{#                    <ul> Lista#}
{#                        <li>Element listy 1</li>#}
{#                        <li>Element listy 2</li>#}
{#                        <li>Element listy 3</li>#}
{#                    </ul>#}
{#                    <h3>Jeszcze mniej ważny nagłówek</h3>#}
{#                    <fieldset> Zgrupowane elementy &lt;checkbox&gt;#}
{#                        <legend>Opis grupy elementów</legend><br/>#}
{#                        <label>Element checkbox 1 i jego opis<input type="checkbox"/></label><br/>#}
{#                        <label>Element checkbox 2 i jego opis<input type="checkbox"/></label><br/>#}
{#                        <label>Element checkbox 3 i jego opis<input type="checkbox"/></label>#}
{#                    </fieldset>#}
{#                </div>#}
                <p style="margin-bottom: 1em;">
                    <b>Jak czytnik widzi i odczytuje elementy strony:</b>
                </p>
                <video controls>
                    <source src="{{ asset('img/1_3_1.mp4') }}" type="video/mp4" />
                    Twoja przeglądarka nie wspiera elementów wideo.
                </video>
                <pre>
                    <code>
&lt;h1&gt;Główny nagłówek&lt;/h1&gt;
&lt;h2&gt;Mniej ważny nagłówek&lt;/h2&gt;
&lt;p&gt;Akapit&lt;/p&gt;
&lt;h2>Mniej ważny nagłówek&lt;/h2&gt;
&lt;p&gt;
    Akapit
        &lt;ul&gt; Lista
            &lt;li&gt;Element listy 1&lt;/li&gt;
            &lt;li&gt;Element listy 2&lt;/li&gt;
            &lt;li&gt;Element listy 3&lt;/li&gt;
        &lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;h3&gt;Jeszcze mniej ważny nagłówek&lt;/h3&gt;
    &lt;fieldset&gt;Zgrupowane elementy &lt;checkbox&gt;
    &lt;legend&gt;Opis grupy elementów&lt;/legend&gt;
        &lt;label&gt;
            &lt;input type="checkbox"/&gt;Element checkbox i jego opis
        &lt;/label&gt;
        &lt;label>
            &lt;input type="checkbox"/&gt;Element checkbox i jego opis
        &lt;/label>
        &lt;label>
            &lt;input type="checkbox"/&gt;Element checkbox i jego opis
        &lt;/label&gt;
    &lt;/fieldset>
&lt;/p>
                    </code>
                </pre>
{#                <div style="border: 2px solid red;">#}
{#                    Jak widzi stronę użytkownik bez problemów ze wzrokiem#}
{#                </div>#}
                <!-- <p>
                    <div>
                        Jak widzi osoba ...<br/>
                        <label style="color: red;">*Imię<input type="text"/></label><br/>
                        <label style="color: red;">*Nazwisko<input type="text"/></label><br/>
                        <label style="color: red;">*Adres<input type="text"/></label><br/>
                        <label>Wiek<input type="text"/></label><br/>
                    </div>
                    <code>
                        &lt;label style="color: red;"&gt;*Imię&lt;input type="text"/&gt;&lt;/label&gt;<br/>
                        &lt;label style="color: red;"&gt;*Nazwisko&lt;input type="text"/&gt;&lt;/label&gt;<br/>
                        &lt;label style="color: red;"&gt;*Adres&lt;input type="text"/&gt;&lt;/label&gt;<br/>
                        &lt;label&gt;Wiek&lt;input type="text"/&gt;&lt;/label&gt;<br/>
                    </code>
                </p> -->
            </section>
            <div>
                <h3 id="1_3_2">Kryterium sukcesu 1.3.2 Zrozumiała kolejność – Poziom A</h3>
                <p>
                    Jeśli kolejność odczytu treści na stronie ma znaczenie, musisz zadbać, aby technologie asystujące mogły wyświetlać stronę w taki sposób.
                    W przeciwnym przypadku część użytkowników może nie zrozumieć przekazu, przez złą kolejność odczytywania zawartości.
                </p>
                <p>
                    Dzięki kolejności określonej programowo, użytkownicy z różnymi niepełnosprawnościami mogą zapoznać się z treścią w sposób zamierzony przez twórcę.
                </p>
                <p>
                    <a href="{{ url('_1_3_2_dobry') }}">Dobra implementacja</a><br/>
                    <a href="{{ url('_1_3_2_zly') }}">Zła implementacja</a>
                </p>
            </div>
            <div>
                <h3 id="1_3_3">Kryterium sukcesu 1.3.3 Właściwości zmysłowe – Poziom A</h3>
                <p class="list-glue">
                    Instrukcje, które pozwalają zrozumieć cel i sposób korzystania z treści na stronie, nie opierają się tylko na właściwościach zmysłowych.
                    Właściwości zmysłowe to np.:
                </p>
                <ul>
                    <li>kolor,</li>
                    <li>kształt,</li>
                    <li>rozmiar,</li>
                    <li>lokalizacja na stronie,</li>
                    <li>dźwięk.</li>
                </ul>
                <p>
                    Część osób nie rozpoznaje kolorów lub używa technologii asystujących, które analizują strukturę strony i „czytają” ją użytkownikowi.
                    Taki odbiorca najczęściej nie widzi kształtu czy położenia elementu na stronie i nie będzie mógł go zlokalizować.
                    Ogranicza to funkcjonalności dostępne dla użytkownika.
                </p>
                <p>
                    Kryterium nie dotyczy narzędzi fizycznych, takich jak klawiatura z klawiszami strzałek.
                    Jeśli interakcja na stronie wiąże się z naciśnięciem konkretnego klawisza, treść strony powinna powiadamiać o tym użytkownika.
                </p>
                <p>
                    Możesz stosować wyrażenia takie jak „poniżej” i „powyżej”, kiedy kolejność treści na stronie jest ustalona i odwołanie do niej jednoznaczne.
                    W takim przypadku użytkownik technologii asystujących zrozumie to jako treść, która pojawiła się wcześniej lub później.
                </p>
                <p>
                    <b>ŹLE</b><br/>
                    Aby przejść dalej, wciśnij okrągły przycisk w kolorze zielonym, który znajduje się po prawej.
                    <button class="btn-example" style="margin-left: 0.5em;">Kliknij mnie</button>
                </p>
                <p>
                    <b>DOBRZE</b><br/>
                    Aby przejść dalej, kliknij poniższy przycisk<br/>
                    <button class="btn-example">Etap II: Wypełnianie danych adresowych</button>
                </p>
            </div>
            <div>
                <h3 id="1_3_4">Kryterium sukcesu 1.3.4 Orientacja – Poziom AA</h3>
                <p>
                    Zawartość strony ma być poprawnie wyświetlana zarówno w orientacji pionowej, jak i poziomej.
                </p>
                <p>
                    Wyjątkiem są sytuacje, kiedy orientacja urządzenia jest ważna. Przykład to aplikacja do odczytywania nut.
                    W orientacji pionowej użytkownik będzie miał problem z odczytywaniem i nawigowaniem po kolejnych stronach z nutami.
                </p>
                <p>
                    Podczas korzystania z przykładów należy przyjąć, że widok poziomy to standardowe okno przeglądarki, a pionowy to okno skurczone.<br/>
                    <a href="{{ url('_1_3_4_dobry') }}">Dobra implementacja</a>
                    <br/>
                    <a href="{{ url('_1_3_4_zly') }}">Zła implementacja</a><br/>
                </p>
            </div>
            <div>
                <h3 id="1_3_5">Kryterium sukcesu 1.3.5 Określenie pożądanej wartości – Poziom AA</h3>
                <p class="list-glue">
                    Pola formularzy i ich cel są odczytywane i przedstawiane przez technologie wspomagające, kiedy:
                </p>
                    <ul>
                        <li>
                            pole w formularzu służy celowi, który jest opisany w
                            <a target="_blank" href="https://www.w3.org/Translations/WCAG21-pl/#input-purposes"><u>Przeznaczenie pól danych w komponentach interfejsu użytkowników</u></a>
                            w dokumencie WCAG 2.1; oraz
                        </li>
                        <li>użyta technologia pozwala na określenie typu pól w formularzach, czyli np. język znaczników HTML.</li>
                    </ul>
                <p>
                    Dzięki określeniu typu pól, użytkownikowi jest znacznie łatwiej wypełniać formularze.
                </p>
                <p>
                    Podstawowym sposobem na określenie celu pola formularza &lt;input&gt; jest dodanie do niego atrybutu 'type'.
                </p>
                    <div>
                        <p>
                            <label for="passwd">Pole hasła:</label><br/>
                            <input type="password" id="passwd">
                        </p>
                    </div>
                    <code>
                        &lt;input type="password"&gt;
                    </code>
                <p class="list-glue" style="margin-top: 2em;">
                    Aby jeszcze dokładniej określić cel pola, trzeba skorzystać z atrybutu 'autocomplete'. Atrybut ten pozwala na dookreślenie znaczenia pola,
                    np. imię: pierwsze, drugie lub użytkownika.<br/>
                    Atrybut 'autocomplete' pozwala także wypełnić pola konkretnymi, wcześniej zapamiętanymi danymi. Jest to dużym ułatwieniem, również dla osób, które:
                </p>
                    <ul>
                        <li>mają problem z pamięcią,</li>
                        <li>wypełniają formularze w obcym języku – funkcjonalność ta działa niezależnie od języka strony.</li>
                    </ul>
                    <div>
                        <p>
                            <label for="familyName">Pole nazwiska (rodowego) z autouzupełnianiem:</label><br/>
                            <input type="text" name="familyName" id="familyName" autocomplete="family-name"><br/>
                        </p>
                    </div>
                    <code>
                        &lt;input type="text" autocomplete="family-name"&gt;
                    </code>
                <p style="margin-top: 2em;">
                    Technologie asystujące dla zdefiniowanych pól mogą wyświetlać ikony, które dla części użytkowników są lepiej zrozumiałe od tekstu.
                    Są to osoby z zaburzeniami poznawczymi, którym jest trudno czytać tekst oraz osoby z dysleksją lub nieumiejące czytać.<br/>
                    <label for="email2"><i class="fa fa-envelope"></i></label>
                    <input type="email" name="email" id="email2">
                </p>
            </div>
            <div>
                <h3 id="1_3_6">Kryterium sukcesu 1.3.6 Określenie przeznaczenia – Poziom AAA</h3>
                <p class="list-glue">
                    Treści, które tworzysz w języku znaczników (np. HTML), muszą być odczytywane przez technologie asystujące. Tymi treściami są:
                </p>
                    <ul>
                        <li>komponenty interfejsu użytkownika (przyciski, linki, pola formularzy),</li>
                        <li>ikony,</li>
                        <li>obszary kluczowe (regiony), takie jak &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;.</li>
                    </ul>
                <p>
                    Technologie asystujące będą wtedy mogły przekazać informacje o przeznaczeniu elementów strony.
                    Kiedy element jest opisany, użytkownik może zdecydować, w jaki sposób informacje będą przekazywane.
                    Istnieje wiele możliwości: modyfikacja w postaci dodania znajomego słownictwa, skrótów klawiszowych lub spersonalizowanych ikon.
                </p>
                <p class="list-glue">
                    Treść musi być oznaczona w taki sposób, aby technologie wspomagające mogły określić, co przedstawia.<br/>
                    Może być to m.in.:
                </p>
                <ul>
                    <li>
                        Informacja, do czego służy link:
                        <p style="margin-top: 0;">
                            <a style="cursor: pointer;">Pobierz raport ludności w Polsce na rok 2020</a><br/>
                            <a style="cursor: pointer;">Wyświetl książkę online</a>
                        </p>
                    </li>
                    <li>
                        Oznaczenie obszarów na stronie – użytkownik może je pomijać lub wyłączać:
                    </li>
                </ul>
                        <pre>
                            <code>
&lt;header&gt;&lt;/header&gt;
&lt;nav&gt;&lt;/nav&gt;
&lt;main&gt;
    &lt;article&gt;
        &lt;section>&lt;/section&gt;
        &lt;section>&lt;/section&gt;
        &lt;section>&lt;/section&gt;
    &lt;/article&gt;
    &lt;aside&lt;/aside&gt;
&lt;/main&gt;
&lt;footer>&lt;/footer&gt;
                            </code>
                        </pre>
                        <img src="{{ asset('img/html_struct.png') }}" alt="" class="img-resp-vert" />
            </div>
        </article>
        <article>
            <h2 class="comment-header-spacing">Komentarze</h2>
            {% if pagination is defined and pagination.items|length %}
                <div style="flex-wrap: wrap;">
                    {% for comment in pagination.items %}
                        {% if comment.is_accepted and comment.content.id == 3 %}
                            <section class="opinion">
                                <span class="user-info">{{ comment.author.username }}, {{ comment.date|date('Y/m/d') }}</span>
                                <div class="message-style">
                                    {{ comment.message }}
                                </div>
                            </section>
                        {% endif %}
                    {% endfor %}
                </div>
            {% else %}
                <div>
                    <p>{{ 'Brak komentarzy' }}</p>
                </div>
            {% endif %}
            <div>
                {{ knp_pagination_render(pagination) }}
            </div>

            {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                {{ form_start(form) }}
                <div class="comment-field-spacing">{{ form_label(form.message) }}</div>
                <div>{{ form_widget(form.message, { 'attr': {'rows' : '6', 'cols' : '60'} } ) }}</div>
                <div>
                    <input type="submit" value="{{ 'Dodaj komentarz' }}" class="submit-btn"/>
                </div>
                {{ form_end(form) }}
            {% endif %}
        </article>
    </main>
    {% include 'footer.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
{% endblock %}