{% extends 'base.html.twig' %}
{# skonfigurowane include, zeby nie zchodzic ponizej templates? #}
{# zrobic normalne style #}
{# poprawic sidebar, zeby byl accessible #}
{# cos nie dziala grafika a11y #}
{% block title %}
    4.1 Kompatybilność
{% endblock %}

{% block body %}
    {% include 'header.html.twig' %}
    {% include 'sidebar.html.twig' %}
    <main id="main" class="page">
        <div style="margin-left: 15em;">
            <h1>Wytyczna 4.1 Kompatybilność</h1>
            <p class="txt-format-main">
                Twórz treści solidnie, aby mogły być skutecznie interpretowane przez różne programy użytkownika, w tym technologie wspomagające.
            </p>
            <div id="table-of-content">
                <h2>Spis treści</h2>
                <ul>
                    <li><a href="#4_1_1">Kryterium sukcesu 4.1.1 Poprawność kodu (Poziom A)</a></li>
                    <li><a href="#4_1_2">Kryterium sukcesu 4.1.2 Nazwa, rola, wartość (Poziom A)</a></li>
                    <li><a href="#4_1_3">Kryterium sukcesu 4.1.3 Komunikaty o stanie (Poziom AA)</a></li>
                </ul>
            </div>
            <div>
                <h3 id="4_1_1">Kryterium sukcesu 4.1.1 Poprawność kodu (Poziom A)</h3>
                <p class="txt-format">
                    Kiedy korzystasz z języka znaczników (np. HTML):
                <ul>
                    <li>elementy posiadają znaczniki początkowe i końcowe, jeśli nie są zniacznikami samozamykającymi się (np. br/ );</li>
                    <li>elementy są zagnieżdżone według swojej specyfikacji;</li>
                    <li>znaczniki nie posiadają zduplikowanych atrybutów;</li>
                    <li>wszystkie ID są unikalne.</li>
                </ul>
                Miej jednak na uwadze, że specyfikacja pozwala czasem na stosowanie powyższych zabiegów.
                </p>
                <p class="txt-format">
                    Kiedy zadbasz o poprawność kodu, unikniesz błędów związanych z nieprawidłowym wyświetlaniem strony.
                </p>
                <p class="txt-format">
                    Technologie asystujące, takie jak czytniki ekranu "obrazują" strone użytkownikowi przez odczytanie struktury strony.
                    Jeśli strona nie jest prawidłowo zbudowana, np. zawiera niedomknięte znaczniki lub niepoprawnie zagnieżdżone elementy,
                    czytnik nie będzie mógł prawidłowo przekazać informacji o stronie.
                </p>
                <strong>Pokazanie przykładów prawidłowego i błędnego kodu + jak mogą to odczytywać technologie asystujace?</strong>
            </div>
            <div>
                <h3 id="4_1_2">Kryterium sukcesu 4.1.2 Nazwa, rola, wartość (Poziom A)</h3>
                <p class="txt-format">
                    Część elementów interfejsu użytkownika nie jest zgodna ze standardem języka znaczników. Są to m.in.:
                <ul>
                    <li>znaczniki wykorzystane w niestandardowy sposób;</li>
                    <li>elementy skryptowane przez twórcę strony.</li>
                </ul>
                Aby technologie asystujące mogły prawidłowo odczytywać informacje o takich elementach, muszą one mieć określone dodatkowe parametry.
                Dodaje je twórca strony. Są to:
                <ul>
                    <li>nazwa komponentu,</li>
                    <li>rola komponentu,</li>
                    <li>stany, właściwości i wartości komponentu,</li>
                    <li>powiadomienia o zmianach dla komponentu.</li>
                </ul>
                </p>
                <p class="txt-format">
                    Aby dowiedzieć się więcej o parametrach, które musisz zastosować, wejdź do <a href="ARIA.html">Wstępu do atrybutów ARIA</a>.
                </p>
                <strong>Nagranie, jak to działa dla niestandardowych elementów przy korzystaniu z czytnika - dobrze i źle zrobione</strong>
            </div>
            <div>
                <h3 id="4_1_3">Kryterium sukcesu 4.1.3 Komunikaty o stanie (Poziom AA)</h3>
                <p class="txt-format">
                    Wyskakujące komunikaty o stanie obiektu muszą być przedstawiane bez wymuszenia na nich fokusu. Zrobisz to przez nadanie wyskakującej wiadomości
                    <b>roli</b>.
                </p>
                <p class="txt-format">
                    Komunikat o statusie:
                <ul>
                    <li>dostarcza wiadomości przy pomyślnie wykonanej czynności lub jej wyniku;</li>
                    <li>powiadamia o oczekiwaniu na rezultat, postępie lub błędach;</li>
                    <li>nie zmienia kontekstu na stronie, czyli m.in. nie zmienia fokusu.</li>
                </ul>
                Przykładowo, komunikatem o statusie jest wynik wyszukiwania - "Znaleziono X elementów" lub dodanie produktu do koszyka.
                </p>
                <p class="txt-format">
                    Kiedy komunikat nie uzyskuje automatycznego fokusu, pozwala to na nieprzerwane korzystanie ze strony.
                </p>
                <p class="txt-format">
                    Komunikaty o stanie nie zostaną odczytywane przez technologie asystujące, jeśli nie są odpowiednio oznaczone.
                    To ważne dla osób, które nie widzą. Kiedy komunikat nie jest odpowiednio oznaczony, użytkownik niewidzący nie będzie wiedział o jego istnieniu.
                </p>
                <strong>Przykładowe komunikaty + kod</strong>
            </div>
        </div>
        </div>
    </main>
    {% include 'footer.html.twig' %}
{% endblock %}